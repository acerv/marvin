#!/usr/bin/env python

"""
.. module:: marvin
   :platform: Unix
   :synopsis: The Marvin main module.
   :license: GPL3

.. moduleauthor:: Andrea Cervesato <andrea.cervesato@mailbox.org>
"""

# pylint: disable=invalid-name

import os
import sys
import argparse

# include marvin library
sys.path.insert(0, os.path.join(os.path.dirname(os.path.dirname(__file__))))

import marvin
from marvin.core import Core
from marvin.report import ReportWriter
from marvin.terminal import TerminalWriter

def main(args):
    """
    Args:
        args: The application arguments.
    """
    # initialize logging module
    marvin.init_logging(args.debug)

    for test in args.test:
        # create the core tester
        core = Core()

        # show events on terminal
        tw = TerminalWriter(sys.stdout)
        tw.listen(core.events)

        # write report file
        rw = ReportWriter()
        rw.listen(core.events)

        # load the test file and create the report directory
        core.load(test, args.reports)

        # run test stages
        core.runall()

if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description="Marvin - Remote testing framework")
    parser.add_argument('-d', '--debug', action='store_true', \
        help="create a debug file for the running section")
    parser.add_argument('-r', '--reports', \
        help="the directory where to store the reports")
    parser.add_argument('test', nargs='+', \
        help="test path or a directory containing the test files")
    arguments = parser.parse_args()
    main(arguments)
